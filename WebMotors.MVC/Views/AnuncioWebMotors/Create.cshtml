@model WebMotors.MVC.ViewModels.AnuncioWebMotorsViewModel

@{
    ViewBag.Title = "Criar";
}

<h2>Criar Anúncio</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Criar Anúncio</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Marca, ViewBag.Marcas as List<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Modelo, new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Versao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Versao, new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Versao, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ano, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ano, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ano, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quilometragem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quilometragem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quilometragem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar ao Inicio", "Index")
</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {

        $("#Modelo").prop('disabled', true);
        $("#Versao").prop('disabled', true);

        //listando o dropdown de marcas
        $("#Marca").change(function () {
            $("#Modelo").empty();
            $("#Versao").empty();

            var makeId = $("#Marca").find('option:selected').text().split('-')[0].trim();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetModel")?makeId=' + makeId,
                dataType: 'json',
                success: function (model) {

                    //Listando o dropdpwn de modelos
                    $.each(model, function (i, model) {
                        $("#Modelo").append('<option value="' + model.Value + '">' + model.Text + '</option>');
                    });

                    $("#Modelo").prop('disabled', false);
                    $("#Versao").prop('disabled', true);

                    //Listando o dropdown de versoes
                    $("#Modelo").change(function () {
                        $("#Versao").empty();
                        var modelId = $("#Modelo").find('option:selected').text().split('-')[0].trim();
                        $.ajax({
                            type: 'GET',
                            url: '@Url.Action("GetVersion")?modelId=' + modelId,
                            dataType: 'json',
                            success: function (version) {
                                $.each(version, function (i, version) {
                                    $("#Versao").append('<option value="' + version.Value + '">' + version.Text + '</option>');
                                });
                                $("#Versao").prop('disabled', false);
                            },
                            error: function (ex) {
                                alert('Erro ao listar as versoes: ' + ex);
                            }
                        });
                    });
                },
                error: function (ex) {
                    alert('Erro ao listar os modelos: ' + ex);
                }
            });
            return false;
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
